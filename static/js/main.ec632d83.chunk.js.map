{"version":3,"sources":["components/break.js","components/resultBreak.js","components/resultDinner.js","App.js","serviceWorker.js","index.js"],"names":["Breakfast","prop","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","click","text","props","handleClick","food","price","concat","_this2","react_default","a","createElement","className","onClick","data-tag","data-value","Component","ResultBreak","state","operations","push","type","forEach","obj","setState","total","parseInt","handleDelete","id","filter","e","index","i","data","Desayuno","map","menudinner","components_break","key","onChange","handleChange","menu","ResultDinner","Almuerzo","App","clickBreakfast","showDinner","showBreak","clickDinner","resultBreak","resultDinner","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gOA2BeA,cAxBX,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAKVQ,MAAM,SAACC,GACHR,EAAKS,MAAMC,YAAYV,EAAKQ,KAAKR,EAAKW,KAAKX,EAAKY,QALhDZ,EAAKW,KAAOZ,EAAKY,KACjBX,EAAKY,MAAQb,EAAKa,MAClBZ,EAAKQ,KAAL,GAAAK,OAAab,EAAKW,KAAlB,OAAAE,OAA4Bb,EAAKY,OAJnBZ,wEAST,IAAAc,EAAAX,KACL,OACIY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OACAE,QAAS,WAAKL,EAAKP,MAAMO,EAAKN,KAAKM,EAAKH,KAAKG,EAAKF,QAClDM,UAAU,SACVE,WAAUjB,KAAKK,KACfa,aAAYlB,KAAKS,OAEbT,KAAKQ,KANT,MAMkBR,KAAKS,eAnBbU,aC6ELC,cA1EjB,SAAAA,IAAc,IAAAvB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoB,IACZvB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsB,GAAAjB,KAAAH,QAGFO,YAAc,SAACF,EAAKG,EAAKC,GACTZ,EAAKwB,MAAMC,WAGnBC,KAAK,CAAEC,KAAMhB,EAAMC,MAAOA,IAChCZ,EAAKwB,MAAMC,WAAWG,QAAQ,SAACC,GAC7B7B,EAAK8B,SAAS,CAAEC,MAAO/B,EAAKwB,MAAMO,MAAQC,SAASH,EAAIjB,YAV7CZ,EAadiC,aAAe,SAACC,GACdlC,EAAK8B,SAAS,CACZL,WAAYzB,EAAKwB,MAAMC,WAAWU,OAAO,SAACC,EAAGC,GAC3C,OAAOA,IAAUH,MAGrBlC,EAAKwB,MAAMC,WAAWG,QAAQ,SAACQ,EAAGE,GAC5BA,IAAMJ,GACRlC,EAAK8B,SAAS,CAAEC,MAAO/B,EAAKwB,MAAMO,MAAQC,SAASI,EAAExB,YAnBzDZ,EAAKwB,MAAQ,CAAEC,WAAY,GAAIM,MAAO,GAF1B/B,wEAyBL,IAAAc,EAAAX,KACP,OACEY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZqB,EAAKC,SAASC,IAAI,SAACC,EAAYJ,GAC9B,OAAQvB,EAAAC,EAAAC,cAAC0B,EAAD,CACNjC,YAAaI,EAAKJ,YAClBC,KAAM+B,EAAWf,KACjBf,MAAO8B,EAAW9B,MAClBgC,IAAKN,EACLJ,GAAII,OAKVvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iCAAjB,qBAEQH,EAAAC,EAAAC,cAAA,WACRF,EAAAC,EAAAC,cAAA,SAAOiB,GAAG,UAAUW,SAAU1C,KAAK2C,iBAIrC/B,EAAAC,EAAAC,cAAA,WACGd,KAAKqB,MAAMC,WAAWgB,IAAI,SAACM,EAAMT,GAChC,OACEvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO0B,IAAKN,GACxBS,EAAKpB,KADR,MACiBoB,EAAKnC,MACpBG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQC,QAAS,kBAAML,EAAKmB,aAAaK,KAAzD,SAORvB,EAAAC,EAAAC,cAAA,oBAAYd,KAAKqB,MAAMO,mBAlEfT,aC6EX0B,cA5Eb,SAAAA,IAAc,IAAAhD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6C,IACZhD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+C,GAAA1C,KAAAH,QAGFO,YAAc,SAACF,EAAKG,EAAKC,GACTZ,EAAKwB,MAAMC,WAGnBC,KAAK,CAAEC,KAAMhB,EAAMC,MAAOA,IAChCZ,EAAKwB,MAAMC,WAAWG,QAAQ,SAACC,GAC7B7B,EAAK8B,SAAS,CAAEC,MAAO/B,EAAKwB,MAAMO,MAAQC,SAASH,EAAIjB,YAV7CZ,EAadiC,aAAe,SAACC,GACdlC,EAAK8B,SAAS,CACZL,WAAYzB,EAAKwB,MAAMC,WAAWU,OAAO,SAACC,EAAGC,GAC3C,OAAOA,IAAUH,MAGrBlC,EAAKwB,MAAMC,WAAWG,QAAQ,SAACQ,EAAGE,GAC5BA,IAAMJ,GACRlC,EAAK8B,SAAS,CAAEC,MAAO/B,EAAKwB,MAAMO,MAAQC,SAASI,EAAExB,YAnBzDZ,EAAKwB,MAAQ,CAAEC,WAAY,GAAIM,MAAO,GAF1B/B,wEAyBL,IAAAc,EAAAX,KACP,OACEY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZqB,EAAKU,SAASR,IAAI,SAACC,EAAYJ,GAC9B,OAAQvB,EAAAC,EAAAC,cAAC0B,EAAD,CACNjC,YAAaI,EAAKJ,YAClBC,KAAM+B,EAAWf,KACjBf,MAAO8B,EAAW9B,MAClBgC,IAAKN,EACLJ,GAAII,OAKVvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iCAAjB,qBAEQH,EAAAC,EAAAC,cAAA,WACRF,EAAAC,EAAAC,cAAA,SAAOiB,GAAG,UAAUW,SAAU1C,KAAK2C,iBAGvC/B,EAAAC,EAAAC,cAAA,WACGd,KAAKqB,MAAMC,WAAWgB,IAAI,SAACM,EAAMT,GAChC,OACEvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO0B,IAAKN,GACxBS,EAAKpB,KADR,MACiBoB,EAAKnC,MACpBG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQC,QAAS,kBAAML,EAAKmB,aAAaK,KAAzD,SAORvB,EAAAC,EAAAC,cAAA,oBAAYd,KAAKqB,MAAMO,OACvBhB,EAAAC,EAAAC,cAAA,UAAQU,KAAK,UAAb,sBAlEWL,aC+CZ4B,qBA7Cb,SAAAA,EAAYzC,GAAO,IAAAT,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+C,IACjBlD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiD,GAAA5C,KAAAH,KAAMM,KAMR0C,eAAiB,WACfnD,EAAK8B,SAAS,CAAEsB,YAAY,EAAOC,WAAW,KAR7BrD,EAUnBsD,YAAc,SAAClB,GACbpC,EAAK8B,SAAS,CAAEsB,YAAY,EAAMC,WAAW,KAT7CrD,EAAKwB,MAAQ,CACX6B,WAAW,EACXD,YAAY,GAJGpD,wEAejB,OACEe,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,2BAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAShB,KAAKgD,gBAApC,YACApC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAShB,KAAKmD,aAApC,aAEFvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAMvBH,EAAAC,EAAAC,cAAA,WACGd,KAAKqB,MAAM6B,UAAYtC,EAAAC,EAAAC,cAACsC,EAAD,MAAkB,MAE5CxC,EAAAC,EAAAC,cAAA,WACGd,KAAKqB,MAAM4B,WAAarC,EAAAC,EAAAC,cAACuC,EAAD,MAAmB,cAvCpClC,cCKEmC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCANC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe,SDyG3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ec632d83.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Breakfast extends Component {\r\n    constructor(prop) {\r\n        super(prop)\r\n        this.food = prop.food\r\n        this.price = prop.price\r\n        this.text=`${this.food} S/${this.price}`\r\n    }\r\n    click=(text)=>{\r\n        this.props.handleClick(this.text,this.food,this.price)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n              <div \r\n              onClick={()=>{this.click(this.text,this.food,this.price)}}\r\n              className=\"Button\"\r\n              data-tag={this.text}\r\n              data-value={this.price}\r\n              >\r\n                 {this.food} S/{this.price}\r\n              </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Breakfast;","import React, { Component } from 'react';\r\nimport data from '../menu.json'\r\nimport Breakfast from './break';\r\n\r\nclass ResultBreak extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = { operations: [], total: 0 }\r\n  }\r\n  handleClick = (text,food,price) => {\r\n    const array = this.state.operations\r\n    // const price = e.target.getAttribute('data-value')\r\n    // const total = e.target.getAttribute('data-tag');\r\n    array.push({ type: food, price: price });\r\n    this.state.operations.forEach((obj) => {\r\n      this.setState({ total: this.state.total + parseInt(obj.price) })\r\n    })\r\n  }\r\n  handleDelete = (id) => {\r\n    this.setState({\r\n      operations: this.state.operations.filter((e, index) => {\r\n        return index !== id\r\n      }),\r\n    })\r\n    this.state.operations.forEach((e, i) => {\r\n      if (i === id) {\r\n        this.setState({ total: this.state.total - parseInt(e.price) })\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                {data.Desayuno.map((menudinner, i) => {\r\n                  return (<Breakfast\r\n                    handleClick={this.handleClick}\r\n                    food={menudinner.type}\r\n                    price={menudinner.price}\r\n                    key={i}\r\n                    id={i}\r\n                  />);\r\n                })\r\n                }\r\n              </div>\r\n              <div className=\"col-6 \">\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <form>\r\n                    <label className=\"d-flex justify-content-center\">\r\n                      Ingrese su nombre\r\n                    </label><br></br>\r\n                    <input id='myInput' onChange={this.handleChange} />\r\n                  </form>\r\n                </div>\r\n                \r\n                  <div>\r\n                    {this.state.operations.map((menu, i) => {\r\n                      return (\r\n                        <div className=\"card\" key={i}>\r\n                          {menu.type}S/.{menu.price}\r\n                          <span className=\"close\" onClick={() => this.handleDelete(i)}>\r\n                            x\r\n                        </span>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                  <p>Total = {this.state.total}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        )\r\n      }\r\n    }\r\n    export default ResultBreak;\r\n","import React, { Component } from 'react';\r\nimport data from '../menu.json'\r\nimport Breakfast from './break';\r\n\r\nclass ResultDinner extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = { operations: [], total: 0 }\r\n  }\r\n  handleClick = (text,food,price) => {\r\n    const array = this.state.operations\r\n    // const price = e.target.getAttribute('data-value')price\r\n    // const food = e.target.getAttribute('data-tag');food\r\n    array.push({ type: food, price: price });\r\n    this.state.operations.forEach((obj) => {\r\n      this.setState({ total: this.state.total + parseInt(obj.price) })\r\n    })\r\n  }\r\n  handleDelete = (id) => {\r\n    this.setState({\r\n      operations: this.state.operations.filter((e, index) => {\r\n        return index !== id\r\n      }),\r\n    })\r\n    this.state.operations.forEach((e, i) => {\r\n      if (i === id) {\r\n        this.setState({ total: this.state.total - parseInt(e.price) })\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                {data.Almuerzo.map((menudinner, i) => {\r\n                  return (<Breakfast\r\n                    handleClick={this.handleClick}\r\n                    food={menudinner.type}\r\n                    price={menudinner.price}\r\n                    key={i}\r\n                    id={i}\r\n                  />);\r\n                })\r\n                }\r\n              </div>\r\n              <div className=\"col-6 \">\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <form>\r\n                    <label className=\"d-flex justify-content-center\">\r\n                      Ingrese su nombre\r\n                    </label><br></br>\r\n                    <input id='myInput' onChange={this.handleChange} />\r\n                  </form>\r\n                </div>\r\n                <div>\r\n                  {this.state.operations.map((menu, i) => {\r\n                    return (\r\n                      <div className=\"card\" key={i}>\r\n                        {menu.type}S/.{menu.price}\r\n                        <span className=\"close\" onClick={() => this.handleDelete(i)}>\r\n                          x\r\n                        </span>\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n                <p>Total = {this.state.total}</p>\r\n                <button type='button'>\r\n                  Enviar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ResultDinner;","import React, { Component } from 'react';\r\nimport ResultBreak from './components/resultBreak';\r\nimport ResultDinner from './components/resultDinner';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showBreak: true,\r\n      showDinner: false,\r\n    };\r\n  }\r\n  clickBreakfast = () => {\r\n    this.setState({ showDinner: false, showBreak: true });\r\n  }\r\n  clickDinner = (e) => {\r\n    this.setState({ showDinner: true, showBreak: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar text-white\">\r\n          <h4>BURGER QUEEN</h4>\r\n        </nav>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-6 buttons\">\r\n                  <div className=\"btn \" onClick={this.clickBreakfast}>Desayuno</div>\r\n                  <div className=\"btn \" onClick={this.clickDinner}>Almuerzo</div>\r\n                </div>\r\n                <div className=\"col-6 \">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {this.state.showBreak ? <ResultBreak /> : null}\r\n        </div>\r\n        <div >\r\n          {this.state.showDinner ? <ResultDinner /> : null}\r\n        </div>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import firebase from 'firebase';\r\n// import 'firebase/firestore';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// firebase.initializeApp({\r\n//     apiKey: \"AIzaSyC3mfRjVM8aqFk3nSb0zgGt7brKcr-Evt0\",\r\n//     authDomain: \"burger-queen-b150c.firebaseapp.com\",\r\n//     databaseURL: \"https://burger-queen-b150c.firebaseio.com\",\r\n//     projectId: \"burger-queen-b150c\",\r\n//     storageBucket: \"burger-queen-b150c.appspot.com\",\r\n//     messagingSenderId: \"710186037838\"\r\n// });\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}